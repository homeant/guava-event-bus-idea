plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.2.1'
    id 'org.jetbrains.changelog' version '1.3.0'
}


group = project.findProperty('pluginGroup').toString()
version = project.findProperty('pluginVersion').toString();

sourceCompatibility = project.findProperty('javaVersion').toString();
targetCompatibility = project.findProperty('javaVersion').toString();

apply {
    plugin 'org.jetbrains.intellij'
    plugin "org.jetbrains.changelog"
}


repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}



// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    pluginName = project.findProperty('pluginName').toString()
    plugins = ['java']
    version = project.findProperty('platformVersion').toString()
    type = project.findProperty('platformType').toString()
    //sameSinceUntilBuild = true
    platformDownloadSources = project.findProperty('platformDownloadSources').toString()
}


tasks{
    wrapper{
        gradleVersion(project.findProperty("gradleVersion").toString())
    }
    patchPluginXml{
        pluginName = project.findProperty('pluginName').toString()
        changeNotes = changelog.getUnreleased().toHTML()
        pluginSinceBuild = project.findProperty('pluginSinceBuild').toString()
        pluginUntilBuild = project.findProperty('pluginUntilBuild').toString()
    }
    publishPlugin {
        token = System.getenv("ORG_GRADLE_PROJECT_intellijPublishToken")
    }
}



